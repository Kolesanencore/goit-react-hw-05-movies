{"version":3,"file":"static/js/886.6d056044.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MoviesDetails/MovieDetails.styled.jsx","pages/MoviesDetails/MovieDetails.jsx","services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import { MutatingDots } from 'react-loader-spinner';\nimport React from 'react';\n\nimport css from 'components/Loader/Loader.module.css';\n\nexport const Loader = ({ visible }) => {\n  return (\n    <div className={css.loaderWrapper}>\n      <MutatingDots\n        height=\"100\"\n        width=\"100\"\n        color=\"#bf3989\"\n        secondaryColor=\"#096bde)\"\n        radius=\"12.5\"\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperClass=\"loaderWrapper\"\n        visible={visible}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const NavList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 271px);\n  gap: 20px;\n`;\n\nexport const Container = styled.div`\n  max-width: 1180px;\n  padding: 20px 16px;\n  margin: 0px auto;\n`;\n","import styled from '@emotion/styled';\r\n\r\nexport const OutsideWrap = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 24px;\r\n  background: linear-gradient(135deg, #bf3989, #096bde);\r\n`;\r\n\r\nexport const ImgWrap = styled.div`\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const InsideWrap = styled.div`\r\n  font-size: 16px;\r\n  color: white;\r\n`;\r\n\r\nexport const MovieTitle = styled.h2`\r\n  font-size: 32px;\r\n  color: #ffb30e;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  color: #1ce72d;\r\n`;\r\n\r\nexport const SubTitle = styled.h3`\r\n  margin-top: 16px;\r\n  margin-bottom: 4px;\r\n  color: #0eff2a;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  gap: 10px;\r\n  color: #f9f9f9;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  Img,\r\n  ImgWrap,\r\n  InsideWrap,\r\n  List,\r\n  Span,\r\n  MovieTitle,\r\n  OutsideWrap,\r\n  SubTitle,\r\n} from './Movie.styled';\r\n\r\nconst Movie = ({ movieData }) => {\r\n  return (\r\n    <>\r\n      <OutsideWrap>\r\n        <ImgWrap>\r\n          <Img src={movieData.src} alt={movieData.title} />\r\n        </ImgWrap>\r\n        <InsideWrap>\r\n          <MovieTitle>{movieData.title}</MovieTitle>\r\n          <div>\r\n            <p>\r\n              User score: <Span>{movieData.userScore} %</Span>\r\n            </p>\r\n            <SubTitle>Overview</SubTitle>\r\n            <p>{movieData.overview}</p>\r\n            <SubTitle>Genres</SubTitle>\r\n            <List>{movieData.genresList}</List>\r\n          </div>\r\n        </InsideWrap>\r\n      </OutsideWrap>\r\n    </>\r\n  );\r\n};\r\n\r\nMovie.propTypes = {\r\n  movieData: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    src: PropTypes.string.isRequired,\r\n    userScore: PropTypes.number.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    genresList: PropTypes.array.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import { Link, NavLink } from 'react-router-dom';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nexport const LinkStyle = styled(Link)`\r\n  margin-left: 8px;\r\n  margin-top: 8px;\r\n  margin-right: 8px;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n  padding: 6px;\r\n  align-items: center;\r\n  font-weight: 700;\r\n  justify-content: center;\r\n  background-color: #e5a536;\r\n  color: white;\r\n\r\n  border-radius: 2px;\r\n\r\n  :hover {\r\n    box-shadow: 0 2px 8px rgba(255, 107, 1, 0),\r\n      inset 0 1px hsla(0, 0%, 100%, 0.3), inset 0 10px hsla(0, 0%, 100%, 0.2),\r\n      inset 0 10px 20px hsla(0, 0%, 100%, 0.25),\r\n      inset 0 -15px 30px rgba(255, 107, 1, 0.3);\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const Detail = styled.p`\r\n  margin-top: 14px;\r\n  margin-bottom: 14px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nexport const LinkList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 12px;\r\n  margin-bottom: 14px;\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  padding: 8px;\r\n  border-radius: 12px;\r\n  font-size: 20px;\r\n  color: #e5a536;\r\n  font-weight: bold;\r\n  transition: transform 0.3s cubic-bezier(0.7, 0.98, 0.86, 0.98);\r\n\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.02);\r\n  }\r\n\r\n  &.active {\r\n    color: #ffffff;\r\n\r\n    text-transform: uppercase;\r\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.64);\r\n    background: linear-gradient(135deg, #bf3989, #096bde);\r\n    box-shadow: 0 2px 8px rgba(255, 107, 1, 0),\r\n      inset 0 1px hsla(0, 0%, 100%, 0.3), inset 0 10px hsla(0, 0%, 100%, 0.2),\r\n      inset 0 10px 20px hsla(0, 0%, 100%, 0.25),\r\n      inset 0 -15px 30px rgba(255, 107, 1, 0.2);\r\n  }\r\n`;\r\n","import { Suspense, useEffect, useRef, useState } from 'react';\n\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { FaBackward } from 'react-icons/fa';\n\nimport Loader from 'components/Loader/Loader';\nimport Movie from 'components/Movie/Movie';\n\nimport { fetchMovie } from 'services/movieApi';\n\nimport { Detail, LinkList, LinkStyle, StyledLink } from './MovieDetails.styled';\nimport { Container } from 'components/MovieList/MovieList.styled';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const locationDetails = useLocation();\n\n  const backUpLink = useRef(locationDetails.state?.from ?? '/movies');\n\n  const [movieData, setMovieData] = useState(null);\n  const [showLoader, setShowLoader] = useState(true);\n\n  useEffect(() => {\n    setShowLoader(true);\n    fetchMovie(Number(movieId))\n      .then(setMovieData)\n      .catch(console.log)\n      .finally(() => setShowLoader(false));\n  }, [movieId]);\n\n  return (\n    <section>\n      <LinkStyle to={backUpLink.current}>\n        <FaBackward style={{ marginRight: '5px' }} />\n        Back to\n      </LinkStyle>\n      {showLoader && <Loader visible={showLoader} />}\n      {movieData && <Movie movieData={movieData} />}\n      <Container>\n        <Detail>Additional information</Detail>\n        <LinkList>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </LinkList>\n\n        <Suspense fallback={<div>Please wait. We are in a process...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c209603f4e1441562adec7f34b907cef';\n\nexport const getTrendingMovies = async (page = 1) => {\n  const response = await axios.get(`${BASE_URL}trending/movie/week`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n\n  const results = response.data.results.slice(0, 12);\n  return {\n    ...response.data,\n    results,\n  };\n};\n\nexport const getSearchMovie = async (movieToSearch, page = 1) => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: movieToSearch,\n      page: page,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovie = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n\n    const { poster_path, title, vote_average, overview, genres } =\n      response.data;\n    const src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://cdn-icons-png.flaticon.com/512/2748/2748558.png';\n    const userScore = Math.ceil(vote_average * 10);\n\n    const genresList = genres.map(({ id, name }) => <li key={id}>{name}</li>);\n\n    return { src, title, userScore, overview, genresList };\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n\n    const reviews = response.data.results.map(({ author, id, content }) => ({\n      author,\n      id,\n      content,\n    }));\n\n    return reviews;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const cast = response.data.cast.map(\n      ({ name, character, id, profile_path }) => {\n        const src = profile_path\n          ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n          : 'https://cdn-icons-png.flaticon.com/512/2748/2748558.png';\n        return {\n          name,\n          character,\n          id,\n          src,\n        };\n      }\n    );\n    return cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Loader","visible","className","css","height","width","color","secondaryColor","radius","ariaLabel","wrapperClass","NavList","styled","Container","OutsideWrap","ImgWrap","Img","InsideWrap","MovieTitle","Span","SubTitle","List","movieData","src","alt","title","userScore","overview","genresList","LinkStyle","Link","Detail","LinkList","StyledLink","NavLink","MovieDetails","movieId","useParams","locationDetails","useLocation","backUpLink","useRef","state","from","useState","setMovieData","showLoader","setShowLoader","useEffect","fetchMovie","Number","then","catch","console","log","finally","to","current","style","marginRight","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","page","axios","params","api_key","response","results","data","slice","getSearchMovie","movieToSearch","query","poster_path","vote_average","genres","Math","ceil","map","id","name","message","fetchReviews","reviews","author","content","fetchCast","cast","character","profile_path"],"sourceRoot":""}