{"version":3,"file":"static/js/523.5bd5af8d.chunk.js","mappings":"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","sources":["components/Actor/Actor.styled.jsx","components/Actor/Actor.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","services/movieApi.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Item = styled.li`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  margin-bottom: 8px;\r\n  width: 200px;\r\n  height: 300px;\r\n  object-fit: inherit;\r\n  border-radius: 12px;\r\n`;\r\n\r\nexport const Name = styled.h3`\r\n  margin-bottom: 4px;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Character = styled.p`\r\n  font-style: italic;\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Character, Img, Item, Name } from './Actor.styled';\r\n\r\nimport { Container } from 'components/MovieList/MovieList.styled';\r\n\r\nexport const Actor = ({ name, character, src }) => {\r\n  return (\r\n    <Container>\r\n      <Item>\r\n        <Img src={src} alt={name} />\r\n        <Name>{name}</Name>\r\n        <Character>{character}</Character>\r\n      </Item>\r\n    </Container>\r\n  );\r\n};\r\n\r\nActor.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  character: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Actor;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  justify-content: center;\r\n  grid-template-columns: repeat(auto-fill, 270px);\r\n  gap: 12px;\r\n  color: #e5a536;\r\n  padding-top: 14px;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  color: #e58236;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { fetchCast } from 'services/movieApi';\r\n\r\nimport { Actor } from 'components/Actor/Actor';\r\n\r\nimport { Info, List } from './Cast.styled';\r\nimport Loader from 'components/Loader/Loader';\r\n\r\nexport const Cast = () => {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchCast(movieId)\r\n      .then(data => {\r\n        setCast(data);\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {cast.length > 0 ? (\r\n        <List>\r\n          {cast.map(actorInfo => (\r\n            <Actor key={actorInfo.id} {...actorInfo} />\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Info>There is no information about the movie cast</Info>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import { MutatingDots } from 'react-loader-spinner';\n\nimport css from 'components/Loader/Loader.module.css';\n\nexport const Loader = ({ visible }) => {\n  return (\n    <div className={css.loaderWrapper}>\n      <MutatingDots\n        height=\"100\"\n        width=\"100\"\n        color=\"#bf3989\"\n        secondaryColor=\"#096bde)\"\n        radius=\"12.5\"\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperClass=\"loaderWrapper\"\n        visible={visible}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const NavList = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fill, 271px);\n  gap: 20px;\n  margin-top: 14px;\n`;\n\nexport const Container = styled.div`\n  max-width: 1180px;\n  padding: 0 16px;\n  margin: 0px auto;\n`;\n","import axios from 'axios';\n\nconst API_KEY = 'c209603f4e1441562adec7f34b907cef';\n\nconst axiosInst = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const response = await axiosInst.get('trending/movie/week', {\n      params: {\n        page: page,\n      },\n    });\n\n    const results = response.data.results.slice(0, 12);\n    return {\n      ...response.data,\n      results,\n    };\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getSearchMovie = async (movieToSearch, page = 1) => {\n  try {\n    const response = await axiosInst.get('search/movie', {\n      params: {\n        query: movieToSearch,\n        page: page,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovie = async movieId => {\n  try {\n    const response = await axiosInst.get(`movie/${movieId}`);\n\n    const { poster_path, title, vote_average, overview, genres } =\n      response.data;\n    const src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://cdn-icons-png.flaticon.com/512/2748/2748558.png';\n    const userScore = Math.ceil(vote_average * 10);\n\n    const genresList = genres.map(({ id, name }) => <li key={id}>{name}</li>);\n\n    return { src, title, userScore, overview, genresList };\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axiosInst.get(`movie/${movieId}/reviews`);\n\n    const reviews = response.data.results.map(({ author, id, content }) => ({\n      author,\n      id,\n      content,\n    }));\n\n    return reviews;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axiosInst.get(`movie/${movieId}/credits`);\n    const cast = response.data.cast.map(\n      ({ name, character, id, profile_path }) => {\n        const src = profile_path\n          ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n          : 'https://cdn-icons-png.flaticon.com/512/2748/2748558.png';\n        return {\n          name,\n          character,\n          id,\n          src,\n        };\n      }\n    );\n    return cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Item","styled","Img","Name","Character","Actor","name","character","src","alt","List","Info","Cast","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","fetchCast","then","data","catch","console","log","finally","Loader","length","map","actorInfo","id","visible","className","css","height","width","color","secondaryColor","radius","ariaLabel","wrapperClass","NavList","Container","axiosInst","axios","baseURL","params","api_key","getTrendingMovies","page","get","response","results","slice","message","getSearchMovie","movieToSearch","query","fetchMovie","poster_path","title","vote_average","overview","genres","userScore","Math","ceil","genresList","fetchReviews","reviews","author","content","profile_path"],"sourceRoot":""}