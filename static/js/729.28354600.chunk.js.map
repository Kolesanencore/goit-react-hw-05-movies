{"version":3,"file":"static/js/729.28354600.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","components/MovieList/MovieList.styled.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import { MutatingDots } from 'react-loader-spinner';\nimport React from 'react';\n\nimport css from 'components/Loader/Loader.module.css';\n\nexport const Loader = ({ visible }) => {\n  return (\n    <div className={css.loaderWrapper}>\n      <MutatingDots\n        height=\"100\"\n        width=\"100\"\n        color=\"#bf3989\"\n        secondaryColor=\"#096bde)\"\n        radius=\"12.5\"\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperClass=\"loaderWrapper\"\n        visible={visible}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Img = styled.img`\n  margin-bottom: 8px;\n  width: 270px;\n  height: 450px;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { Img } from './MovieListItem.styled';\n\nexport const MovieListItem = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <li key={movie.id}>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        {movie.poster_path ? (\n          <Img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n        ) : (\n          <Img\n            src=\"https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg\"\n            alt={movie.title}\n          />\n        )}\n        <h3>{movie.title}</h3>\n        <p>{movie.release_date && movie.release_date.slice(0, 4)}</p>\n        <p>{movie.vote_average && movie.vote_average.toFixed(1)}</p>\n      </Link>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MovieListItem;\n","import MovieListItem from 'components/MovieListItem/MovieListItem';\n\nimport { NavList } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <NavList>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id} movie={movie} />\n      ))}\n    </NavList>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const NavList = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fill, 271px);\n  gap: 20px;\n  margin-top: 14px;\n`;\n\nexport const Container = styled.div`\n  max-width: 1180px;\n  padding: 0 16px;\n  margin: 0px auto;\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchBar_SearchForm__J+i1a\",\"SearchForm-button\":\"SearchBar_SearchForm-button__9dEGw\",\"SearchForm-button-label\":\"SearchBar_SearchForm-button-label__ILeLu\",\"SearchForm-input\":\"SearchBar_SearchForm-input__pGYri\",\"search-icon\":\"SearchBar_search-icon__OScmK\"};","import { useSearchParams } from 'react-router-dom';\n\nimport { useForm } from 'react-hook-form';\n\nimport { FcSearch } from 'react-icons/fc';\n\nimport css from 'components/SearchBar/SearchBar.module.css';\n\nexport const SearchBar = ({ onSearch }) => {\n  const { register, handleSubmit, reset } = useForm();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSubmit = data => {\n    const searchQuery = data.searchQuery;\n    onSearch(searchQuery);\n    reset({ searchQuery: '' });\n\n    const params = new URLSearchParams(searchParams.toString());\n    params.set('query', searchQuery);\n    setSearchParams(params);\n  };\n\n  return (\n    <form className={css['SearchForm']} onSubmit={handleSubmit(onSubmit)}>\n      <input\n        className={css['SearchForm-input']}\n        type=\"text\"\n        placeholder=\"Search Movies\"\n        {...register('searchQuery', { required: true })}\n      />\n      <button className={css['SearchForm-button']} type=\"submit\">\n        <span className=\"button-label\">\n          <FcSearch className={css['search-icon']} />\n        </span>\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { useState } from 'react';\n\nimport Loader from 'components/Loader/Loader';\n\nimport { getSearchMovie } from 'services/movieApi';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nexport const Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [showLoader, setShowLoader] = useState(false);\n  const [searchExecuted, setSearchExecuted] = useState(false);\n\n  const handleSearch = async searchQuery => {\n    try {\n      setShowLoader(true);\n      const data = await getSearchMovie(searchQuery);\n      setSearchResults(data.results);\n      setSearchExecuted(true);\n    } catch (error) {\n      console.log('Error searching movies:', error);\n    } finally {\n      setShowLoader(false);\n    }\n  };\n\n  return (\n    <section>\n      <SearchBar onSearch={handleSearch} />\n      {showLoader && <Loader visible={showLoader} />}\n      {searchExecuted && searchResults.length === 0 && (\n        <p style={{ textAlign: 'center' }}>No search results found</p>\n      )}\n      {searchResults.length > 0 && <MovieList movies={searchResults} />}\n    </section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c209603f4e1441562adec7f34b907cef';\n\nexport const getTrendingMovies = async (page = 1) => {\n  const response = await axios.get(`${BASE_URL}trending/movie/week`, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n    },\n  });\n\n  const results = response.data.results.slice(0, 12);\n  return {\n    ...response.data,\n    results,\n  };\n};\n\nexport const getSearchMovie = async (movieToSearch, page = 1) => {\n  const response = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: movieToSearch,\n      page: page,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovie = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n\n    const { poster_path, title, vote_average, overview, genres } =\n      response.data;\n    const src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://cdn-icons-png.flaticon.com/512/2748/2748558.png';\n    const userScore = Math.ceil(vote_average * 10);\n\n    const genresList = genres.map(({ id, name }) => <li key={id}>{name}</li>);\n\n    return { src, title, userScore, overview, genresList };\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n\n    const reviews = response.data.results.map(({ author, id, content }) => ({\n      author,\n      id,\n      content,\n    }));\n\n    return reviews;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const cast = response.data.cast.map(\n      ({ name, character, id, profile_path }) => {\n        const src = profile_path\n          ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n          : 'https://cdn-icons-png.flaticon.com/512/2748/2748558.png';\n        return {\n          name,\n          character,\n          id,\n          src,\n        };\n      }\n    );\n    return cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Loader","visible","className","css","height","width","color","secondaryColor","radius","ariaLabel","wrapperClass","Img","styled","movie","location","useLocation","to","id","state","from","poster_path","src","alt","title","release_date","slice","vote_average","toFixed","movies","map","NavList","Container","onSearch","useForm","register","handleSubmit","reset","useSearchParams","searchParams","setSearchParams","onSubmit","data","searchQuery","params","URLSearchParams","toString","set","type","placeholder","required","Movies","useState","searchResults","setSearchResults","showLoader","setShowLoader","searchExecuted","setSearchExecuted","handleSearch","getSearchMovie","results","console","log","length","style","textAlign","MovieList","BASE_URL","API_KEY","getTrendingMovies","page","axios","api_key","response","movieToSearch","query","fetchMovie","movieId","overview","genres","userScore","Math","ceil","genresList","name","message","fetchReviews","reviews","author","content","fetchCast","cast","character","profile_path"],"sourceRoot":""}